// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model pi {
  PI_id          Int          @id @default(autoincrement())
  PI_no          String
  PI_description String?
  pi_summary     pi_summary[]
  pi_survey      pi_survey[]
  responsible_committee responsible_committee[]
}

model pi_summary {
  summary_id Int     @id @default(autoincrement())
  subj_id    Int
  PI_id      Int
  PI_score1  Int
  PI_score2  Int
  PI_score3  Int
  PI_score4  Int
  PI_score5  Int
  pi         pi      @relation(fields: [PI_id], references: [PI_id], map: "PI_Summary_PI_id_fkey")
  subject    subject @relation(fields: [subj_id], references: [subj_id], map: "PI_Summary_subj_id_fkey")

  @@index([PI_id], map: "PI_Summary_PI_id_fkey")
  @@index([subj_id], map: "PI_Summary_subj_id_fkey")
}

model subject {
  subj_id     Int          @id @default(autoincrement())
  course_name String
  subj_name   String
  year        Int
  prof_id     Int
  update_data DateTime?
  pi_summary  pi_summary[]
  user        user         @relation(fields: [prof_id], references: [prof_id], map: "Subject_prof_Id_fkey")
  responsible_committee responsible_committee[]

  @@unique([course_name, year, prof_id], map: "unique_course_year_prof_id")
  @@index([prof_id], map: "Subject_prof_Id_fkey")
}

model user {
  prof_id   Int       @id @default(autoincrement())
  name      String
  surname   String
  username  String
  email     String    @unique(map: "USER_email_key")
  password  String
  user_type String?
  subject   subject[]
  responsible_committee responsible_committee[]
}

model pi_survey {
  survey_id   Int   @id @default(autoincrement())
  survey_year Int
  PI_id       Int
  PIS_score1  Int
  PIS_score2  Int
  PIS_score3  Int
  PIS_score4  Int
  PIS_score5  Int
  pi          pi    @relation(fields: [PI_id], references: [PI_id], map: "PI_Survey_PI_id_fkey")

  @@index([PI_id], map: "PI_Survey_PI_id_fkey")
}

model responsible_committee {
  committee_id  Int   @id @default(autoincrement())
  resp_year     Int
  prof_id       Int
  PI_id         Int
  sub_id        Int?
  weight        Int?
  pi            pi      @relation(fields: [PI_id], references: [PI_id], map: "Responsible_Committee_PI_id_fkey")
  subject       subject? @relation(fields: [sub_id], references: [subj_id], map: "Responsible_Committee_Sub_id_fkey")
  user          user    @relation(fields: [prof_id], references: [prof_id], map: "Responsible_Committee_Prof_Id_fkey")

  @@index([PI_id], map: "Responsible_Committee_PI_id_fkey")
  @@index([sub_id], map: "Responsible_Committee_Sub_id_fkey")
  @@index([prof_id], map: "Responsible_Committee_Prof_Id_fkey")
}

